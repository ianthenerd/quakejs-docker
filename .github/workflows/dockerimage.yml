name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - name: Generate a token
      id: generate-token
      uses: actions/create-github-app-token@v1
      with:
        app-id: ${{ vars.APP_ID }}
        private-key: ${{ secrets.APP_PRIVATE_KEY }}
    - name: Use the token
      env:
        GH_TOKEN: ${{ steps.generate-token.outputs.token }}
    - uses: actions/checkout@v3
    - name: Get versions
      id: version
      run: |
        echo "::set-output name=major::$(awk -F, '{print $2}' .tags)"
        echo "::set-output name=full::$(awk -F, '{print $1}' .tags)"
    - name: Docker Setup qemu-action
      uses: docker/setup-qemu-action@v2
    - name: Docker Setup Buildx
      uses: docker/setup-buildx-action@v2
    - name: DockerHub Login
      uses: docker/login-action@v2.0.0
      with:
        username: ${{ github.repository_owner }}
        password: ${{ secrets.DOCKER_KEY }}
    - name: GitHub Container Registry
      uses: docker/login-action@v2.0.0
      with:
         registry: ghcr.io
         username: ${{ github.repository_owner }}
         password: ${{ secrets.GH_TOKEN }}

    - name: Build the Docker image
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64 #,linux/arm/v6,linux/arm/v7,linux/arm64
        push: true
        tags: |
          ${{ github.repository }}:latest
          ${{ github.repository }}:${{ steps.version.outputs.full }}
          ${{ github.repository }}:${{ steps.version.outputs.major }}
          ghcr.io/${{ github.repository }}:latest
          ghcr.io/${{ github.repository }}:${{ steps.version.outputs.full }}
          ghcr.io/${{ github.repository }}:${{ steps.version.outputs.major }}
