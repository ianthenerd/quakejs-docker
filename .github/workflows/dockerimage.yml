name: Docker Image CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - uses: actions/checkout@v3
      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
    - name: Install cosign
      if: github.event_name != 'pull_request'
      uses: sigstore/cosign-installer@f3c664df7af409cb4873aa5068053ba9d61a57b6 #v2.6.0
      with:
        cosign-release: 'v1.11.0'
    - name: Get versions
      id: version
      run: |
        echo "::set-output name=major::$(awk -F, '{print $2}' .tags)"
        echo "::set-output name=full::$(awk -F, '{print $1}' .tags)"
    - name: Docker Setup qemu-action
      uses: docker/setup-qemu-action@v2
    - name: Docker Setup Buildx
      uses: docker/setup-buildx-action@v2

    # Login against a Docker registry except on PR
    # https://github.com/docker/login-action
    - name: Log into registry ${{ env.REGISTRY }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # Extract metadata (tags, labels) for Docker
    # https://github.com/docker/metadata-action
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: GitHub Container Registry
      uses: docker/login-action@v2.0.0
      with:
         registry: ghcr.io
         username: ${{ github.repository_owner }}
         password: ${{ secrets.GH_TOKEN }}

    # Build and push Docker image with Buildx (don't push on PR)
    # https://github.com/docker/build-push-action
    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@v4
      with:
        context: "{{defaultContext}}:src"
        push: ${{ github.event_name != 'pull_request' }} # Don't push on PR
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        tags: |
          ${{ github.repository }}:latest
          ${{ github.repository }}:${{ steps.version.outputs.full }}
          ${{ github.repository }}:${{ steps.version.outputs.major }}
          ghcr.io/${{ github.repository }}:latest
          ghcr.io/${{ github.repository }}:${{ steps.version.outputs.full }}
          ghcr.io/${{ github.repository }}:${{ steps.version.outputs.major }}
